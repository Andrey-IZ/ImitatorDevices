%YAML 1.1
---
# ****** Serial Port Settings: **************
SerialSettings:
  port: COM6
  databits: 8        # (5, 6, 7, 8)
  baud_rate: 19200
  parity: none       # choice - [even - even parity, none - no parity, odd - odd parity]
  stop_bits: 2       # (1, 1.5, 2)
  timeout: 0         # timeout for everything recieved messages (seconds)

#delay_response: 1  # (sec), 0 - its does not delay (by default)
#is_all_handlers_func: True  #  Go along all func-handler (by default: False)

config_vars:
  {
    ukcu_shell_packets: [],
    ukcu_code_patch: [0, False],
    ukcu_clear_shell_packets: [False],
    ukcu_kvitok: ['A5 01 1F 04 01 00 01 00 1A 17']
  }
# *************** Parser definition ************
handler_parser:
 module_name: handlers_ukcu
 function_name: handler_parser_ucku
# **************** Protocols Settings: *****************
---
doc: "Setup, Reset, Test UKCU"
#request:
#response:
order: generator
handler_request:
  module_name: handlers_ukcu
  function_name:
    - handler_request_setup_ukcu
    - handler_request_reset_ukcu
    - handler_request_test_ukcu
handler_response:
  module_name: handlers_ukcu
  function_name: handler_ukcu_response
---
doc: "Квиток"
order: full-generator
handler_response:  { module_name: handlers_ukcu,  function_name: handler_ukcu_reply_kvitok }
---
doc: ukcu
request: [ 0xA600, "Проверка питания 5.7 v1,v2" ]
response: 0x0   # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response:  { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8100,  "Управление питанием P_57B1 P_57B2", 0x3]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8200,  "Управление питанием 5,7 B1, 5,7 B2 power OFF"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8A00, "Одновременное управление питанием 7,5В и 6В", 0x3]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8600, "Отключение питания Разведки"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8700, "Отключение питания Воспроизведения"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8800, "Отключение питания Синтезатора"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8900, "Отключение питания УС"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9700, "Инициализация ADT7310 - 1"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9B00, "Инициализация ADT7310 - 2"]
response: 0x0
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x991C, "Инициализация ADT7310 - 4"]
response:       # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9C25, "Инициализация ADT7310 - 5"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9D05, "Инициализация ADT7310 - 6"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9E20, "Инициализация ADT7310 - 7"]
response:      # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9F1C, "Инициализация ADT7310 - 8"]
response:                                   # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8C00, "Pchv3Ukcu::control-1"]
response: [0, 0xFF]                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw_random }
---
doc: ukcu
request: [0x8B00, "Pchv3Ukcu::control-2"]
response: [0, 0xFF]                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw_random }
---
doc: ukcu
request: [0x8F00, "Pchv3Ukcu::control-3"]
response: [0, 0xFF]                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw_random }
---
doc: ukcu
request: [0x9600, "Pchv3Ukcu::acp - N channel", 0x7]  # code, doc, shift
response: [[0, 10], [0, 5]]                           # [[min_value_low_addr, max_value_low_addr], [min_value_high_addr, max_value_high_addr]]
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_gen_shift_read_random }
---
doc: ukcu
request: [0x9400, "Pchv3Ukcu::capCmd - Command & Address", 0xFF]  # code, doc, shift
response:                                                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0xF000, "Pchv3Ukcu::capCmd - Data", 0xFFF]  # code, doc, shift
response:                                             # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x9500, "Pchv3::WorkMode - WM_RECEIVE"]
response:                                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9501, "Pchv3::WorkMode - WM_TRANSMIT"]
response:                                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x8300, "Pchv3UkcuChannel::setAru", 0xFF]   # code, doc, shift
response:                                         # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0xB000, "Pchv3UkcuChannel::setAt2", 0xFFF]  # code, doc, shift
response:                                             # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8700, "Pchv3UkcuChannel::setPowerIms", 0xFF]  # code, doc, shift
response:                                                 # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8800, "Pchv3UkcuChannel::setPowerIps", 0xFF]  # code, doc, shift
response:                                                 # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8900, "Pchv3UkcuChannel::setPowerGet", 0xFF]  # code, doc, shift
response:                                                 # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8601, "Pchv3UkcuChannel::setPowerRw - X channel", 0xFF] # code, doc, shift
response:                                                           # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x8500, "Pchv3UkcuChannel::setPowerRr", 0xFF]   # code, doc, shift
response:                                                 # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0xB800, "setAt1", 0xFFF]  # code, doc, shift
response:                           # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }
---
doc: ukcu
request: [0x9800, "Pchv3Ukcu::readADT7310 - Status "]
response: 0x90     # data for read from address [LowAddress, HighAddress] or SingleData (Universal)
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw }
---
doc: ukcu
request: [0x9A00, "Pchv3Ukcu::readADT7310 - get value"]
response: [[0, 10], [0, 2]]   # [[min_value_low_addr, max_value_low_addr], [min_value_high_addr, max_value_high_addr]]
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw_random }
---
doc: ukcu
request: [0x9608, "acpt"]
response:  [[0, 10], [0, 2]]  # [[min_value_low_addr, max_value_low_addr], [min_value_high_addr, max_value_high_addr]]
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_rw_random }
---
doc: ukcu
request: [0x9000, "Pchv3UkcuChannel::adt7310Cmd", 0xFFF]  # code, doc, shift
response:
order: full-generator
handler_response: { module_name: handlers_ukcu,  function_name: handler_ukcu_generate_shift_read }


# **************** Examples: ********************
# --- #------------------------------------------------------------------
# handler_parser:                           # if use command "full-generator" for parsing packet
#  module_name: handlers_snn_gui
#  function_name: handler_parser_snn_gui
# --- #------------------------------------------------------------------
# doc: <Name of commands>
# response:
#    code: { value: 8, type: quint16 }
#    data: { value: 1, type: quint8 }
# emit_send:
#   trigger:
#     - on_connection   # send packet by connection client (!WARNING: Only for TCP)
#     - on_timeout      # send packet by timeout timer client
#   timeout: 1.5  # sec (default: 1)
# handler_response:
#   module_name: handlers_pchv3
#   function_name: handler_pchv3_basic_response
# --- #------------------------------------------------------------------
# doc: <Name of commands>
# request:
# - a1 a2 a3 a4 a5 a2 a7 a8 55 b0 b1
# - a1 a2 a3 dd a5 a6 a7 a8 a9 b0 b1
# response:
# - a1 a2 a3 aa a5 a6 a7 a8 a9 b0 b1
# - a1 a3 a4 a5 a6 a7 66 a9 b0 b1
# order: semiduplex  #  generator   - using one function for generating array of bytes for response to PC (required: handler_response)
#                    #  full-generator -using one function for generating array of bytes  for response and request parsing to PC (required: handler_response, handler_parser)
#                    #  semiduplex - packet of request, than answer one]
#                    #  zip - orderly sending packets on response of request (by default)]
# delay_response: 0  # (ms), 0 - its does not delay (by default)
# --- #------------------------------------------------------------------
# doc:         Setup, Reset, Test UKCU
# < request: <PARAMETERS for function: handler_request> > # it is not required parameters
# < response: <PARAMETERS for function: handler_response> >  # it will be parameter for function-generator of response
# order: generator
# handler_request:              # defined handler into specify modules
#   module_name: handlers_ukcu
#   function_name:
#     - handler_request_setup_ukcu
#     - handler_request_reset_ukcu
#     - handler_request_test_ukcu
# handler_response:             # defined handler into specify modules
#   module_name: handlers_ukcu
#   function_name: handler_ukcu_response    # using <request> parameteres
# --- #---------------------------------------
# doc:    Вращение
# request: 0b00011
# order: full-generator
# handler_response:                                          # defined handler into specify modules
#  module_name: handlers_snn_gui
#  function_name: handler_response_snn_gui_req_turn_omega    # using <request> parameteres
#