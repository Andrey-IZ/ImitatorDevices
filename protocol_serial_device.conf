--- # Serial Port Settings:
port_name: COM4
baud_rate: 8      # [5, 6, 7, 8]
parity: no        # choce: [even: even parity, no: no parity, odd: odd parity]
stop_bits: 2
flow_control: no  # choice: [no - no flow control, hardware - hardware flow control,
                  #         software - software flow control, unknown - unknown flow control]
timeout: 5        # timeout for everything recieved messages (seconds)

# Protocols Settings:
---
doc: Test 5.7v power
request:
- a1 a2 77 a4 a5 a6 a7 48 a9 b0 b1
- a1 a2 a3 a4 a5 a2 a7 a8 55 b0 b1
- a1 a2 a3 dd a5 a6 a7 a8 a9 b0 b1
response:
- a1 a2 a3 a4 95 a7 a8 a9 b0 b1
- a1 a2 a3 aa a5 a6 a7 a8 a9 b0 b1
- a1 a3 a4 a5 a6 a7 66 a9 b0 b1
order: packet    # [zip - by orderly completely,
                   #  generator   - using one function for generating array of bytes for response to PC
                   #  packet - packet of request, than answer one (by default)]
delay_response: 0  # (ms), 0 - its does not delay (by default)
---
doc: Test 6v power

request:  a5 00 1b 04 01 00 22 07 e6 11
response: a5 0d f3 a3 f2 ee 22 55 00 88
order: packet
---
doc:         Setup, Reset, Test UKCU
response:
order: generator
handler_request:
  file_name: handlers_ukcu.py
  function_name:
#    - handler_request_setup_ukcu
    - handler_request_reset_ukcu
    - handler_request_test_ukcu
handler_response:
  file_name: handlers_ukcu.py
  function_name: handler_ukcu_response
---
doc: sTest asdsadasd 6v power
request: 0x0005
response:
order: generator
handler_response:
  file_name: handlers_ukcu.py
  function_name: handler_ukcu_response
handler_request:
  file_name: handlers_ukcu.py
  function_name: handler_request_write_read_low
---
doc: Setup UKCU
request:
  - a5 00 1b 04 01 00 ff 07 e6 17
  - a5 00 1b 04 00 00 00 00 1f 17
response:
  - a5 00 1f 04 00 00 00 00 1b 17
  - a5 00 1f 04 00 00 00 00 1b 17
