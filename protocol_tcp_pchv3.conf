%YAML 1.1
---
# ****** Socket Settings: ****************
SocketSettings:
  port: 2412
  host: localhost
  socket_type: tcp   # choice - [tcp - for stream socket using, udp - for datagram socket using]
  timeout: 0         # timeout for everything recieved messages (seconds)

delay_response: 0  # (sec), 0.0 - its does not delay (by default)

config_vars:
  { pchv3_power_source: {0: False, 1: False, 2: False, 3: False},
    names_power_sources: {0: '5,7В1', 1: '5,7В2', 2: '6В', 3: '7,5В'},
    names_power_tructs: {0: 'РР', 1: 'РВ', 2: 'ГЕТ', 3: 'ИПС', 4: 'ИМС'},
    names_channels: {0: 'Канал1',1: 'Канал2',2: 'Канал3',3: 'Канал4',4: 'Канал5',5: 'Канал6',6: 'Канал7',7: 'Канал8'},
    names_vch_tructs: {0: 'РУ',1: 'Р',2: 'В'},
    pchv3_control_source: 0,
  }
# *************** Parser definition ************
handler_parser:
 module_name: handlers_pchv3
 function_name: handler_parser_pchv3
# **************** Protocols Settings: *****************
--- #---------------------------------------
doc: Check 12v
response: # 0003 0008 01
   code: { value: 8, type: quint16 }
   data: { value: 1, type: quint8 }
emit_send:
  trigger:
    - on_connection   # send packet by connection client (!WARNING Only for TCP)
#    - on_timeout      # send packet by timeout timer client
#  timeout: 1.5  # sec (default: 1)
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_unversal
--- #---------------------------------------
doc: Give state all power sources
response:
  - 6  # Code of command
  - 7  # Code command for all packet:    Питание на источниках
emit_send:
  trigger:
   - on_connection   # send packet by connection client (!WARNING Only for TCP)
handler_response:             # defined handler into specify modules
  module_name: handlers_pchv3
  function_name: handler_pchv3_get_power_state    # using <request> parametere
--- #---------------------------------------
doc: Update Sensors
response: 2
emit_send:
  trigger:
  #  - on_connection   # send packet by connection client (!WARNING Only for TCP)
    - on_timeout      # send packet by timeout timer client
  timeout: 1  # sec (default: 1)
order: full-generator
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_update_sensors
--- #---------------------------------------
doc:    Питание на источниках
request: 7  # Code of command
response: 6  # Code command for all packet:    Питание на источниках
order: full-generator
handler_response:             # defined handler into specify modules
  module_name: handlers_pchv3
  function_name: handler_pchv3_power_changer    # using <request> parametere
--- #---------------------------------------
doc:    Питание на всех источниках
request: 6  # Code of command
response: 7  # Code command for packet:    Питание на источниках
order: full-generator
handler_response:             # defined handler into specify modules
  module_name: handlers_pchv3
  function_name: handler_pchv3_all_power_changer    # using <request> parametere
--- #---------------------------------------
doc: Питание трактов на каналах
request: 10
order: full-generator
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_power_on_channel    # using <request> parametere
--- #---------------------------------------
doc: Значение аттенюаторов на каналах
request: 11
order: full-generator
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_attenuators    # using <request> parametere
--- #---------------------------------------
doc: Состояние АРУ трактов на каналах
request: 12
order: full-generator
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_state_aru    # using <request> parametere
--- #---------------------------------------
doc: Установить таблицу кодов ФАПЧ
request: [ 13, 14 ]
response: 00 04 00 0E 01 01
order: full-generator
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_fapch_codes    # using <request> parametere
--- #---------------------------------------
doc: Установить ЦАП на каналах
request: 15
order: full-generator
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_set_cap    # using <request> parametere
--- #---------------------------------------
doc: Включить режим "разведка"
request: 00 03 00 03 00
response: 00 03 00 03 00
order: semiduplex
--- #---------------------------------------
doc: Включить режим "воспроизведение"
request: 00 03 00 03 01
response: 00 03 00 03 01
order: semiduplex
# ******************************************* Examples: ********************
# --- #------------------------------------------------------------------
# handler_parser:                           # if use command "full-generator" for parsing packet
#  module_name: handlers_snn_gui
#  function_name: handler_parser_snn_gui
# --- #------------------------------------------------------------------
# doc: <Name of commands>
# response:
#    code: { value: 8, type: quint16 }
#    data: { value: 1, type: quint8 }
# emit_send:
#   trigger:
#     - on_connection   # send packet by connection client (!WARNING: Only for TCP)
#     - on_timeout      # send packet by timeout timer client
#   timeout: 1.5  # sec (default: 1)
# handler_response:
#   module_name: handlers_pchv3
#   function_name: handler_pchv3_basic_response
# --- #------------------------------------------------------------------
# doc: <Name of commands>
# request:
# - a1 a2 a3 a4 a5 a2 a7 a8 55 b0 b1
# - a1 a2 a3 dd a5 a6 a7 a8 a9 b0 b1
# response:
# - a1 a2 a3 aa a5 a6 a7 a8 a9 b0 b1
# - a1 a3 a4 a5 a6 a7 66 a9 b0 b1
# order: semiduplex  #  generator   - using one function for generating array of bytes for response to PC (required: handler_response)
#                    #  full-generator -using one function for generating array of bytes  for response and request parsing to PC (required: handler_response, handler_parser)
#                    #  semiduplex - packet of request, than answer one]
#                    #  zip - orderly sending packets on response of request (by default)]
# delay_response: 0  # (ms), 0 - its does not delay (by default)
# --- #------------------------------------------------------------------
# doc:         Setup, Reset, Test UKCU
# < request: <PARAMETERS for function: handler_request> > # it is not required parameters
# < response: <PARAMETERS for function: handler_response> >  # it will be parameter for function-generator of response
# order: generator
# handler_request:              # defined handler into specify modules
#   module_name: handlers_ukcu
#   function_name:
#     - handler_request_setup_ukcu
#     - handler_request_reset_ukcu
#     - handler_request_test_ukcu
# handler_response:             # defined handler into specify modules
#   module_name: handlers_ukcu
#   function_name: handler_ukcu_response    # using <request> parameteres
# --- #---------------------------------------
# doc:    Вращение
# request: 0b00011
# order: full-generator
# handler_response:                                          # defined handler into specify modules
#  module_name: handlers_snn_gui
#  function_name: handler_response_snn_gui_req_turn_omega    # using <request> parameteres
# **************************************************************************************************
