%YAML 1.1
---
# ****** Socket Settings: ****************
SocketSettings:
  port: 2412
  host: 192.24.12.13
  socket_type: tcp   # choice - [tcp - for stream socket using, udp - for datagram socket using]
  timeout: 0         # timeout for everything recieved messages (seconds)
  delay_response: 0  # (ms), 0 - its does not delay (by default)

config_vars:
  { 'pchv3_power_source': {0: False, 1: False, 2: False, 3: False}}
# *************** Parser definition ************
handler_parser:
 module_name: handlers_pchv3
 function_name: handler_parser_pchv3   # using <request> parameteres
# **************** Protocols Settings: *****************
--- #---------------------------------------
doc: Check 12v
response: # 0003 0008 01
   code: { value: 8, type: quint16 }
   data: { value: 1, type: quint8 }
emit_send:
  trigger:
    - on_connection   # send packet by connection client (!WARNING Only for TCP)
#    - on_timeout      # send packet by timeout timer client
#  timeout: 1.5  # sec (default: 1)
handler_response:
  module_name: handlers_pchv3
  function_name: handler_pchv3_unversal
--- #---------------------------------------
doc:    Питание на источниках
request: 7  # Code of command
order: full-generator
handler_response:             # defined handler into specify modules
 module_name: handlers_pchv3
 function_name: handler_pchv3_power_changer    # using <request> parametere
--- #---------------------------------------
doc:    Питание на всех источниках
request: 6  # Code of command
response: 7  # Code command for packet:    Питание на источниках
order: full-generator
handler_response:             # defined handler into specify modules
 module_name: handlers_pchv3
 function_name: handler_pchv3_all_power_changer    # using <request> parametere

# ******************************************** Examples: ********************
# --- #------------------------------------------------------------------
# handler_parser:                           # if use command "full-generator" for parsing packet
#  module_name: handlers_snn_gui
#  function_name: handler_parser_snn_gui
# --- #------------------------------------------------------------------
# doc: <Name of commands>
# response:
#    code: { value: 8, type: quint16 }
#    data: { value: 1, type: quint8 }
# emit_send:
#   trigger:
#     - on_connection   # send packet by connection client (!WARNING: Only for TCP)
#     - on_timeout      # send packet by timeout timer client
#   timeout: 1.5  # sec (default: 1)
# handler_response:
#   module_name: handlers_pchv3
#   function_name: handler_pchv3_basic_response
# --- #------------------------------------------------------------------
# doc: <Name of commands>
# request:
# - a1 a2 a3 a4 a5 a2 a7 a8 55 b0 b1
# - a1 a2 a3 dd a5 a6 a7 a8 a9 b0 b1
# response:
# - a1 a2 a3 aa a5 a6 a7 a8 a9 b0 b1
# - a1 a3 a4 a5 a6 a7 66 a9 b0 b1
# order: semiduplex  #  generator   - using one function for generating array of bytes for response to PC (required: handler_response)
#                    #  full-generator -using one function for generating array of bytes  for response and request parsing to PC (required: handler_response, handler_parser)
#                    #  semiduplex - packet of request, than answer one]
#                    #  zip - orderly sending packets on response of request (by default)]
# delay_response: 0  # (ms), 0 - its does not delay (by default)
# --- #------------------------------------------------------------------
# doc:         Setup, Reset, Test UKCU
# < request: <PARAMETERS for function: handler_request> > # it is not required parameters
# < response: <PARAMETERS for function: handler_response> >  # it will be parameter for function-generator of response
# order: generator
# handler_request:              # defined handler into specify modules
#   module_name: handlers_ukcu
#   function_name:
#     - handler_request_setup_ukcu
#     - handler_request_reset_ukcu
#     - handler_request_test_ukcu
# handler_response:             # defined handler into specify modules
#   module_name: handlers_ukcu
#   function_name: handler_ukcu_response    # using <request> parameteres
# --- #---------------------------------------
# doc:    Вращение
# request: 0b00011
# order: full-generator
# handler_response:                                          # defined handler into specify modules
#  module_name: handlers_snn_gui
#  function_name: handler_response_snn_gui_req_turn_omega    # using <request> parameteres
# **************************************************************************************************
